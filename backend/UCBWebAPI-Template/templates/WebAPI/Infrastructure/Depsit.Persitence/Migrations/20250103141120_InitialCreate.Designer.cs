// <auto-generated />
using System;
using Infrastructure.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Depsit.Persitence.Migrations
{
    [DbContext(typeof(DepsitDbContext))]
    [Migration("20250103141120_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Depsit.Domain.Entities.Dummy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "date");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "summary");

                    b.Property<double>("TemperatureC")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "temperatureC");

                    b.HasKey("Id");

                    b.ToTable("Dummies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = "2025-01-03",
                            Summary = "Warm",
                            TemperatureC = 25.0
                        });
                });

            modelBuilder.Entity("azure.Domain.Entities.DummyReading", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DummyId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReadingTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DummyId");

                    b.ToTable("DummyReadings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DummyId = 1,
                            Location = "Station 1",
                            ReadingTime = new DateTime(2025, 1, 3, 15, 11, 20, 289, DateTimeKind.Local).AddTicks(9914),
                            Value = 25.5
                        });
                });

            modelBuilder.Entity("azure.Domain.Entities.DummyReading", b =>
                {
                    b.HasOne("Depsit.Domain.Entities.Dummy", "Dummy")
                        .WithMany("Readings")
                        .HasForeignKey("DummyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dummy");
                });

            modelBuilder.Entity("Depsit.Domain.Entities.Dummy", b =>
                {
                    b.Navigation("Readings");
                });
#pragma warning restore 612, 618
        }
    }
}
